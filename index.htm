<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Time Since August 9th, 2023</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: Arial, sans-serif;
            overflow: hidden;
            position: relative;
        }

        .background-layer {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-size: cover;
            pointer-events: none;
        }

        .background-layer.lower {
            background-image: url('toh2.png');
            z-index: 1;
            transform: scale(1.5);
        }

        .background-layer.upper {
            background-image: url('toh1.png');
            z-index: 2;
            transform: scale(1.1);
        }

        .container {
            position: relative;
            z-index: 3;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
        }

        .clock, .days, .quote {
            margin: 20px 0;
        }

        #timer {
            font-size: 3em;
            color: #333;
        }

        #daysElapsed {
            font-size: 1em;
            color: #333;
        }

        .quote {
            font-size: 2em;
            font-style: italic;
            text-align: center;
            max-width: 80%;
            transition: opacity 1s ease-in-out;
            opacity: 1;
        }

        .achievements {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
        }

        .achievement-icon {
            margin: 0 10px;
            font-size: 24px;
            opacity: 0.3;  /* Initially make all icons semi-transparent */
        }
    </style>
</head>

<body>
    <div class="background-layer lower"></div>
    <div class="background-layer upper"></div>
    <div class="container">
        <div class="achievements">
            <i class="fas fa-star achievement-icon" id="icon1"></i>
            <i class="fas fa-trophy achievement-icon" id="icon2"></i>
            <i class="fas fa-crown achievement-icon" id="icon3"></i>
            <!-- Add more icons as needed -->
        </div>
        <div class="clock">
            <span id="timer">00:00:00</span>
        </div>
        <div class="days">
            <span id="daysElapsed">0.00 days</span>
        </div>
        <div class="quote" id="quoteBlock">
            <!-- Quote will be populated by JavaScript -->
        </div>
    </div>
    <script>
        const timerElement = document.getElementById('timer');
        const daysElapsedElement = document.getElementById('daysElapsed');
        const quoteBlock = document.getElementById('quoteBlock');
        const lowerLayer = document.querySelector('.background-layer.lower');
        const upperLayer = document.querySelector('.background-layer.upper');

        let quotes = [];
        let currentIndex = 0;
        let lastLevel = 0;

        // Shuffle function (Fisher-Yates/Durstenfeld)
        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]]; // Swap elements
            }
        }

        fetch('quotes.txt')
            .then(response => response.text())
            .then(data => {
                const lines = data.trim().split('\n');
                for (let line of lines) {
                    const parts = line.split(' —');
                    if (parts.length === 2) {
                        quotes.push(parts);
                    }
                }
                shuffleArray(quotes);
                setNextQuote();
            })
            .catch(error => {
                console.error("Error fetching quotes:", error);
            });

        function setNextQuote() {
            if (currentIndex >= quotes.length) {
                shuffleArray(quotes);
                currentIndex = 0;
            }
            const currentQuote = quotes[currentIndex];
            quoteBlock.innerHTML = `${currentQuote[0]}<br><span style="font-weight: bold;">—${currentQuote[1]}</span>`;
            currentIndex++;
        }

        function cycleQuote() {
            quoteBlock.style.opacity = 0;
            setTimeout(() => {
                setNextQuote();
                quoteBlock.style.opacity = 1;
            }, 1000);
        }

        setInterval(cycleQuote, 6666);

        function updateAchievements(hours) {
            const level = Math.floor(hours / 10);
            for (let i = 1; i <= level; i++) {
                const iconElement = document.getElementById('icon' + i);
                if (iconElement) {
                    iconElement.style.opacity = 1; // Make the icon fully visible
                }
            }
            if (level > lastLevel) {
                alert(`Congratulations! You are level ${level}!`);
                lastLevel = level;
            }
        }

        const targetDate = new Date(Date.UTC(2023, 7, 9, 0, 17 - 3, 0));

        function updateClock() {
            const now = new Date();
            const nowInGMTPlus3 = new Date(now.getTime() + (3 * 60 * 60 * 1000));
            const diff = nowInGMTPlus3 - targetDate;
            const days = (diff / (1000 * 60 * 60 * 24)).toFixed(2);

            const hours = Math.floor(diff / (1000 * 60 * 60));
            const minutes = Math.floor((diff / (1000 * 60)) % 60);
            const seconds = Math.floor((diff / 1000) % 60);

            timerElement.textContent = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
            daysElapsedElement.textContent = `${days} days`;

            updateAchievements(hours);
        }

        document.addEventListener('mousemove', (e) => {
            const x = (window.innerWidth / 2 - e.pageX) / 50;
            const y = (window.innerHeight / 2 - e.pageY) / 50;

            lowerLayer.style.transform = `translate(${x * 0.3}px, ${y * 0.3}px) scale(1.5)`;
            upperLayer.style.transform = `translate(${x}px, ${y}px) scale(1.1)`;
        });

        setInterval(updateClock, 1000);
    </script>
</body>

</html>
