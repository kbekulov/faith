<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Time Since August 9th, 2023, 12:17 AM GMT+3</title>
    <link rel="stylesheet" href="styles.css">
</head>

<body>
    <div class="background-layer lower"></div>
    <div class="background-layer upper"></div>

    <div class="container">
        <div class="achievements" id="achievementsContainer"></div>
        <div class="exp-gauge">
            <div class="exp-fill" id="expFill"></div>
        </div>
        <div class="clock">
            <span id="timer">0:00:00</span>
        </div>
        <div class="days">
            <span id="daysElapsed">0.00 days</span>
        </div>
        <div class="quote" id="quoteBox"></div>
    </div>

    <div class="congrats-message" id="congratsMessage"></div>

    <script>
        // Variables
        const timerElem = document.getElementById('timer');
        const daysElem = document.getElementById('daysElapsed');
        const quoteBox = document.getElementById('quoteBox');
        const achievementsContainer = document.getElementById('achievementsContainer');
        const congratsMessage = document.getElementById('congratsMessage');
        const targetDate = new Date(Date.UTC(2023, 7, 9, 0, 17)); // August 9th, 00:17 AM, 2023 UTC
        let lastLevel = 0;

        // Quotes
        let quotes = [];

        // Fetch quotes from JSON file
        fetch('quotes.json')
            .then(response => response.json())
            .then(data => {
                quotes = data;
            })
            .catch(error => {
                console.error("Error fetching quotes:", error);
            });

        let displayedQuotes = [];

        function getRandomQuote() {
            if (displayedQuotes.length === quotes.length) {
                displayedQuotes = [];
            }

            let randomQuote;
            do {
                randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
            } while (displayedQuotes.includes(randomQuote));

            displayedQuotes.push(randomQuote);
            return randomQuote;
        }

        function updateAchievements(hours) {
            const level = Math.floor(hours / 10);
            const exp = hours % 10;

            // Update the EXP gauge
            const expFill = document.getElementById('expFill');
            expFill.style.width = (exp * 10) + '%';  // Convert the exp to percentage

            if (level > lastLevel) {
                for (let i = lastLevel + 1; i <= level; i++) {
                    const levelDiv = document.createElement('div');
                    levelDiv.className = 'level-icon';
                    levelDiv.textContent = i;

                    const tooltip = document.createElement('div');
                    tooltip.className = 'tooltip';
                    tooltip.innerHTML = `<b>Skill Name</b>: Skill Effect`;  // Update this part with the appropriate skill data
                    levelDiv.appendChild(tooltip);

                    achievementsContainer.appendChild(levelDiv);
                }

                congratsMessage.textContent = `Congratulations! You are level ${level}!`;
                congratsMessage.style.opacity = 1;
                setTimeout(() => {
                    congratsMessage.style.opacity = 0;
                }, 3000);

                lastLevel = level;
            }
        }

        function updateTime() {
            const now = new Date();
            const timeDiff = now - targetDate; // Difference in milliseconds

            const seconds = Math.floor(timeDiff / 1000);
            const minutes = Math.floor(seconds / 60);
            const hours = Math.floor(minutes / 60);
            const days = (hours / 24).toFixed(2);

            const displayHours = hours % 24;
            const displayMinutes = minutes % 60;
            const displaySeconds = seconds % 60;

            timerElem.textContent = `${displayHours}:${displayMinutes.toString().padStart(2, '0')}:${displaySeconds.toString().padStart(2, '0')}`;
            daysElem.textContent = `${days} days`;

            updateAchievements(hours);
        }

        setInterval(() => {
            updateTime();
            quoteBox.innerHTML = getRandomQuote().split("—").join("<br>—");
        }, 1000);

        updateTime();  // Call the function immediately on page load
    </script>
</body>

</html>
